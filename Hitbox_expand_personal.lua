local Players = game:GetService("Players")
local CoreGui = game:GetService("StarterGui")
local RunService = game:GetService("RunService")

local function isNumber(str)
    return tonumber(str) ~= nil or str == 'inf'
end

local settings = {
    HitboxSize = 15,
    HitboxTransparency = 0.9,
    HitboxStatus = false,
    TeamCheck = false,
    Walkspeed = Players.LocalPlayer.Character.Humanoid.WalkSpeed,
    Jumppower = Players.LocalPlayer.Character.Humanoid.JumpPower,
    TPSpeed = 3,
    TPWalk = false,
}

-- UI
local Library = loadstring(game:HttpGet("https://raw.githubusercontent.com/Vcsk/UI-Library/main/Source/MyUILib(Unamed).lua"))();
local Window = Library:Create("Hitbox Expander")

local ToggleGui = Instance.new("ScreenGui")
local Toggle = Instance.new("TextButton")

ToggleGui.Name = "ToggleGui_HE"
ToggleGui.Parent = game.CoreGui

Toggle.Name = "Toggle"
Toggle.Parent = ToggleGui
Toggle.BackgroundColor3 = Color3.fromRGB(24, 24, 24)
Toggle.BackgroundTransparency = 0.660
Toggle.Position = UDim2.new(0, 0, 0.454706937, 0)
Toggle.Size = UDim2.new(0.0650164187, 0, 0.0888099447, 0)
Toggle.Font = Enum.Font.SourceSans
Toggle.Text = "Toggle"
Toggle.TextScaled = true
Toggle.TextColor3 = Color3.fromRGB(40, 40, 40)
Toggle.TextSize = 24.000
Toggle.TextXAlignment = Enum.TextXAlignment.Left
Toggle.Active = true
Toggle.Draggable = true
Toggle.MouseButton1Click:Connect(function()
    Library:ToggleUI()
end)

local HomeTab = Window:Tab("Home", "rbxassetid://10888331510")

HomeTab:InfoLabel("only works on some games!")

HomeTab:Section("Settings")

local function updateSetting(setting, value)
    settings[setting] = value
end

HomeTab:TextBox("Hitbox Size", function(value)
    updateSetting("HitboxSize", value)
end)

HomeTab:TextBox("Hitbox Transparency", function(value)
    updateSetting("HitboxTransparency", value)
end)

HomeTab:Section("Main")

HomeTab:Toggle("Status: ", function(state)
    updateSetting("HitboxStatus", state)
end)

HomeTab:Toggle("Team Check", function(state)
    updateSetting("TeamCheck", state)
end)

HomeTab:Keybind("Toggle UI", Enum.KeyCode.F, function()
    Library:ToggleUI()
end)

-- Player Movement Control
local function modifyPlayer(player)
    if player.Name ~= Players.LocalPlayer.Name then
        pcall(function()
            local rootPart = player.Character and player.Character:FindFirstChild("HumanoidRootPart")
            if rootPart then
                rootPart.Size = Vector3.new(settings.HitboxSize, settings.HitboxSize, settings.HitboxSize)
                rootPart.Transparency = settings.HitboxTransparency
                rootPart.BrickColor = BrickColor.new("Really black")
                rootPart.Material = "Neon"
                rootPart.CanCollide = false
            end
        end)
    end
end

local function onRenderStepped()
    if settings.HitboxStatus then
        local localPlayerTeam = Players.LocalPlayer.Team
        for _, player in ipairs(Players:GetPlayers()) do
            if (not settings.TeamCheck) or (localPlayerTeam ~= player.Team) then
                modifyPlayer(player)
            end
        end
    else
        -- Reset modifications if HitboxStatus is false
        for _, player in ipairs(Players:GetPlayers()) do
            modifyPlayer(player)
        end
    end
end

-- Initialize RenderStepped connection
RunService.RenderStepped:Connect(onRenderStepped)
