--i rip off someone script and do some personal touch and i remove all of the comments cause why not?

local CoreGui, Players = game:GetService("StarterGui"), game:GetService("Players")
local getgenv = getgenv

local function isNumber(str)
	if tonumber(str) or str == 'inf' then
		return true
	end
end

getgenv().HitboxSize, getgenv().HitboxTransparency = 15, 0.9
getgenv().HitboxStatus, getgenv().TeamCheck = false, false
getgenv().Walkspeed, getgenv().Jumppower = Players.LocalPlayer.Character.Humanoid.WalkSpeed, Players.LocalPlayer.Character.Humanoid.JumpPower
getgenv().TPSpeed, getgenv().TPWalk = 3, false

local Library = loadstring(game:HttpGet("https://raw.githubusercontent.com/Vcsk/UI-Library/main/Source/MyUILib(Unamed).lua"))()
local ToggleGui, Toggle = Instance.new("ScreenGui"), Instance.new("TextButton")

ToggleGui.Name, ToggleGui.Parent = "ToggleGui_HE", game.CoreGui
Toggle.Name, Toggle.Parent = "Toggle", ToggleGui
Toggle.BackgroundColor3, Toggle.BackgroundTransparency = Color3.fromRGB(24, 24, 24), 0.66
Toggle.Position, Toggle.Size = UDim2.new(0, 0, 0.454706937, 0), UDim2.new(0.0650164187, 0, 0.0888099447, 0)
Toggle.Font, Toggle.Text, Toggle.TextScaled, Toggle.TextColor3, Toggle.TextSize, Toggle.TextXAlignment = Enum.Font.SourceSans, "Toggle", true, Color3.fromRGB(40, 40, 40), 24.0, Enum.TextXAlignment.Left
Toggle.Active, Toggle.Draggable = true, true
Toggle.MouseButton1Click:connect(function() Library:ToggleUI() end)

local HomeTab, PlayerTab, VisualTab = Library:Create("Hitbox Expander"):Tab("Home", "rbxassetid://10888331510"), Library:Tab("Players", "rbxassetid://12296135476"), Library:Tab("Visuals", "rbxassetid://12308581351")

HomeTab:InfoLabel("only works on some games!")

HomeTab:Section("Settings")

HomeTab:TextBox("Hitbox Size", function(value) getgenv().HitboxSize = value end)
HomeTab:TextBox("Hitbox Transparency", function(number) getgenv().HitboxTransparency = number end)

HomeTab:Section("Main")

HomeTab:Toggle("Status: ", function(state)
    getgenv().HitboxStatus = state
    game:GetService('RunService').RenderStepped:connect(function()
        if HitboxStatus and not TeamCheck then
            for _,v in ipairs(Players:GetPlayers()) do
                if v.Name ~= Players.LocalPlayer.Name then
                    pcall(function()
                        local char = v.Character
                        char.HumanoidRootPart.Size, char.HumanoidRootPart.Transparency = Vector3.new(HitboxSize, HitboxSize, HitboxSize), HitboxTransparency
                        char.HumanoidRootPart.BrickColor, char.HumanoidRootPart.Material, char.HumanoidRootPart.CanCollide = BrickColor.new("Really black"), "Neon", false
                    end)
                end
            end
        elseif HitboxStatus and TeamCheck then
            for _,v in ipairs(Players:GetPlayers()) do
                if Players.LocalPlayer.Team ~= v.Team then
                    pcall(function()
                        local char = v.Character
                        char.HumanoidRootPart.Size, char.HumanoidRootPart.Transparency = Vector3.new(HitboxSize, HitboxSize, HitboxSize), HitboxTransparency
                        char.HumanoidRootPart.BrickColor, char.HumanoidRootPart.Material, char.HumanoidRootPart.CanCollide = BrickColor.new("Really black"), "Neon", false
                    end)
                end
            end
        else
            for _,v in ipairs(Players:GetPlayers()) do
                if v.Name ~= Players.LocalPlayer.Name then
                    pcall(function()
                        local char = v.Character
                        char.HumanoidRootPart.Size, char.HumanoidRootPart.Transparency = Vector3.new(2, 2, 1), 1
                        char.HumanoidRootPart.BrickColor, char.HumanoidRootPart.Material, char.HumanoidRootPart.CanCollide = BrickColor.new("Medium stone grey"), "Plastic", false
                    end)
                end
            end
        end
    end)
end)

HomeTab:Toggle("Team Check", function(state) getgenv().TeamCheck = state end)
HomeTab:Keybind("Toggle UI", Enum.KeyCode.F, function() Library:ToggleUI() end)

PlayerTab:TextBox("WalkSpeed", function(value)
    getgenv().Walkspeed = value
    pcall(function() Players.LocalPlayer.Character.Humanoid.WalkSpeed = value end)
end)

PlayerTab:Toggle("Loop WalkSpeed", function(state)
    getgenv().loopW = state
    game:GetService("RunService").Heartbeat:Connect(function()
        if loopW then pcall(function() Players.LocalPlayer.Character.Humanoid.WalkSpeed = Walkspeed end) end
    end)
end)

PlayerTab:TextBox("JumpPower", function(value)
    getgenv().Jumppower = value
    pcall(function() Players.LocalPlayer.Character.Humanoid.JumpPower = value end)
end)

PlayerTab:Toggle("Loop JumpPower", function(state)
    getgenv().loopJ = state
    game:GetService("RunService").Heartbeat:Connect(function()
        if loopJ then pcall(function() Players.LocalPlayer.Character.Humanoid.JumpPower = Jumppower end) end
    end)
end)

PlayerTab:TextBox("TP Speed", function(value) getgenv().TPSpeed = value end)

PlayerTab:Toggle("TP Walk", function(s)
    getgenv().TPWalk = s
    local hb, player, lplr, chr, hum = game:GetService("RunService").Heartbeat, Players, Players.LocalPlayer, lplr.Character, lplr.Character:FindFirstChildWhichIsA("Humanoid")
    while Tpwalk and hb:Wait() and chr and hum and hum.Parent do
        if hum.MoveDirection.Magnitude > 0 then
            chr:TranslateBy(Tpwalk and isNumber(getgenv().TPSpeed) and hum.MoveDirection * tonumber(getgenv().TPSpeed) or hum.MoveDirection)
        end
    end
end)

PlayerTab:Slider("Fov", game.Workspace.CurrentCamera.FieldOfView, 120, function(v) game.Workspace.CurrentCamera.FieldOfView = v end)

PlayerTab:Toggle("Noclip", function(s)
    getgenv().Noclip = s
    game:GetService("RunService").Heartbeat:Connect(function()
        if Noclip then
            game:GetService("RunService").Stepped:wait()
            Players.LocalPlayer.Character.Head.CanCollide, Players.LocalPlayer.Character.Torso.CanCollide = false, false
        end
    end)
end)

PlayerTab:Toggle("Infinite Jump", function(s)
    getgenv().InfJ = s
    game:GetService("UserInputService").JumpRequest:connect(function()
        if InfJ then game:GetService("Players").LocalPlayer.Character:FindFirstChildOfClass'Humanoid':ChangeState("Jumping") end
    end)
end)

PlayerTab:Button("Rejoin", function() game:GetService("TeleportService"):Teleport(game.PlaceId, Players.LocalPlayer) end)

VisualTab:InfoLabel("Wait 3-10 seconds")

VisualTab:Toggle("Character Highlight", function(state)
    getgenv().enabled, getgenv().filluseteamcolor, getgenv().outlineuseteamcolor = state, true, true
    getgenv().fillcolor, getgenv().outlinecolor, getgenv().filltrans, getgenv().outlinetrans = Color3.new(0, 0, 0), Color3.new(1, 1, 1), 0.5, 0.5

    local RunService, Players, UserInputService = game:GetService("RunService"), game:GetService("Players"), game:GetService("UserInputService")

    local function highlightCharacter(player, enabled, fillTeamColor, outlineTeamColor, fillColor, outlineColor, fillTransparency, outlineTransparency)
        if player and player.Character then
            local character = player.Character

            for _, part in pairs(character:GetDescendants()) do
                if part:IsA("BasePart") then
                    part.Transparency = enabled and 0 or 1
                    part.BrickColor = fillTeamColor and player.TeamColor or BrickColor.new(fillColor)
                    part.Material = "Neon"
                    part.CanCollide = false

                    if enabled and outlineTeamColor then
                        part.Outline = true
                        part.OutlineColor = player.TeamColor
                    elseif enabled then
                        part.Outline = true
                        part.OutlineColor = BrickColor.new(outlineColor)
                    else
                        part.Outline = false
                    end
                end
            end
        end
    end

    local function characterHighlighting(enabled, fillTeamColor, outlineTeamColor, fillColor, outlineColor, fillTransparency, outlineTransparency)
        for _, player in pairs(Players:GetPlayers()) do
            highlightCharacter(player, enabled, fillTeamColor, outlineTeamColor, fillColor, outlineColor, fillTransparency, outlineTransparency)
        end
    end

    local function onPlayerAdded(player)
        player.CharacterAdded:Connect(function()
            characterHighlighting(true, true, true, Color3.new(0, 0, 0), Color3.new(1, 1, 1), 0.5, 0.5)
        end)

        player.CharacterRemoving:Connect(function()
            characterHighlighting(false)
        end)
    end

    Players.PlayerAdded:Connect(onPlayerAdded)

    UserInputService.InputBegan:Connect(function(input)
        if input.KeyCode == Enum.KeyCode.H then
            characterHighlighting(not getgenv().enabled, true, true, Color3.new(0, 0, 0), Color3.new(1, 1, 1), 0.5, 0.5)
        end
    end)

    RunService.RenderStepped:Connect(function()
        if getgenv().enabled then
            for _, player in pairs(Players:GetPlayers()) do
                highlightCharacter(player, true, true, true, Color3.new(0, 0, 0), Color3.new(1, 1, 1), 0.5, 0.5)
            end
        end
    end)
end)

if game.PlaceId == 3082002798 then
    local GamesTab = Library:Tab("Games", "rbxassetid://15426471035")
    GamesTab:InfoLabel("Game: "..game:GetService("MarketplaceService"):GetProductInfo(game.PlaceId).Name)
    GamesTab:Button("No Cooldown", function()
        for _, v in ipairs(game:GetService('ReplicatedStorage')['Shared_Modules'].Tools:GetDescendants()) do
            if v:IsA('ModuleScript') then
                local Module = require(v)
                Module.DEBOUNCE = 0
            end
        end
    end)
end
